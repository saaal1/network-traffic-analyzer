Network Traffic Analyzer using Scapy
====================================

-------------------------------------------------
Script 1: network_trafic1.py
-------------------------------------------------

Description:
Captures 10 packets and prints a one-line summary of each. Useful for quick inspection.

Code:
------
from scapy.all import sniff

# Callback function to process each packet
def packet_callback(packet):
    print(packet.summary())

# Capture 10 packets
sniff(count=10, prn=packet_callback)


-------------------------------------------------
Script 2: network_trafic.py
-------------------------------------------------

Description:
Captures 10 packets and prints detailed information: IP addresses, protocol, ports, and first 100 bytes of payload.

Code:
------
from scapy.all import sniff

# Function to analyze and display packet structure
def analyze_packet(packet):
    print("\n=== New Packet Captured ===")
    
    if packet.haslayer("IP"):
        ip_layer = packet["IP"]
        print(f"Source IP: {ip_layer.src}")
        print(f"Destination IP: {ip_layer.dst}")
        print(f"Protocol: {ip_layer.proto}")

    if packet.haslayer("TCP"):
        tcp_layer = packet["TCP"]
        print(f"Source Port: {tcp_layer.sport}")
        print(f"Destination Port: {tcp_layer.dport}")

    if packet.haslayer("UDP"):
        udp_layer = packet["UDP"]
        print(f"Source Port: {udp_layer.sport}")
        print(f"Destination Port: {udp_layer.dport}")

    if packet.haslayer("Raw"):
        print(f"Payload: {packet['Raw'].load[:100]}")  # Print first 100 bytes of payload

# Start sniffing
sniff(count=10, prn=analyze_packet)


-------------------------------------------------
How to Run
-------------------------------------------------
1. Make sure you have Scapy installed:
   pip install scapy

2. Run either script with administrator/root privileges to allow packet sniffing.
   python capture_summary.py
   OR
   python analyze_packets.py

3. Install Npcap (on Windows) if required: https://npcap.com